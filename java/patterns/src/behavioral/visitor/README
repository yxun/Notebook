
Visitor pattern: you want a hierarchy of objects to modify their behavior but without modifying their source code.

A practical result of this separation is the ability to add new operations to existing object structures without modifying those structures.

Design participants
- Visitor : This is an interface or an abstract class used to declare the visit operations for all the types of visitable classes.
- ConcreteVisitor : For each type of visitor all the visit methods, declared in abstract visitor, must be implemented. Each Visitor will be responsible for different operations.
- Visitable : an interface which declares the accept operation. This is the entry point which enables an object to be "visited" by the visitor object.
- ConcreteVisitable : Those classes implements the Visitable interface or class and defines the accept operation. The visitor object is passed to this object using the accept operation.

